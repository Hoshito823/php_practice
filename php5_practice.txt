【ORM】
オブジェクト関係マッピング。テーブルのクラスを簡単に作れる。
対象のテーブルにこういう型のカラムがあると宣言して作成する。
簡単なクエリであればメソッド一つで検索、取得、ソート、リミット等が可能。
RDBMSの実装の違いを吸収できる。(型の取り方や使える文法などに違いがある。
開発&テストではSQLiteをつかって本番でMySQL等を使うことができる)
https://tikasan.hatenablog.com/entry/2018/08/06/110000


【Composer】
依存性管理ツール。利用したいライブラリに関係するライブラリ群を一括でダウンロードしてくれる。
Composerで利用したいライブラリをインストールするとvender/autoload.phpというファイルを生成する。
requireすることでvender配下のライブラリをオートロードするように設定してくれる。
https://qiita.com/niisan-tokyo/items/8cccec88d45f38171c94


【オートローダー】
ファイルを自動的にロードする仕組み。
PHPではファイルを明示的に読むこむ必要があるが
オートローダーで指定したディレクトリ配下を自動で読み込んでくれる。
https://qiita.com/atwata/items/5ba72d3d881a81227c2a


【Blade】
クラスのように階層化したテンプレートエンジン。
フッター等の決まりきった部分は基底クラスに定義して、
bodyだけを書いたbladeを読み込むという使い方ができる。
Bladeテンプレートを使うにはファイルの拡張子をXXX.blade.phpとしておく必要がある。
雛形を定義できるようなイメージ。
https://laraweb.net/knowledge/2174/


【マイグレーション】
データベースのバージョンコントロール、DBの作成、編集を管理する。
スクリプトファイルにテーブルの新規作成やカラムの追加を記述する。
複数の開発者でDBに変更を加える場合、ローカルでクエリ実行しなければない。
全ての変更が保存されるので開発者が常に同じDBを使って作業することができる。
https://laraweb.net/knowledge/714/
